spring:
  profiles:
    active: local
---
server:
  port: 0

logging:
  level:
    yongs:
      temp: DEBUG
    com:
      netflix:
        eureka: OFF
        discovery: OFF
      
spring:
  config:
    activate:
      on-profile: local
  application:
    name: example-pay
  data:
    mongodb:
      host: localhost
      port: 27017
      database: example
      authentication-database: admin
      username: scott
      password: tiger
  kafka:
    bootstrap-servers: localhost:9091
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: pay
      enable-auto-commit: false
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      ack-mode: manual-immediate
         
eureka:
  instance:
    preferIpAddress: true
    hostname: localhost
    instanceId: ${spring.application.name}:${random.value}
  client:
    registerWithEureka: true
    fetchRegistry: true
    enabled: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
      
---
server:
  port: 8080

logging:
  level:
    yongs:
      temp: INFO
      
spring:
  config:
    activate:
      on-profile: container
  application:
    name: example-pay
  data:
    mongodb:
      host: mongo
      port: 27017
      database: example
      authentication-database: admin
      username: scott
      password: tiger
  kafka:
    bootstrap-servers: kafka:9091
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: order
      enable-auto-commit: false
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      ack-mode: manual-immediate
         
eureka:
  instance:
    preferIpAddress: true
    hostname: example-eureka
    instanceId: ${spring.application.name}:${random.value}
  client:
    registerWithEureka: true
    fetchRegistry: true
    enabled: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
      